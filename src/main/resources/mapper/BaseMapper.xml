<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gelin.activitispringboot.dao.BaseDao" >

    <parameterMap id="audit" type="com.gelin.activitispringboot.model.AuditProcess"/>
    <resultMap id="audit" type="com.gelin.activitispringboot.model.AuditProcess"/>

    <parameterMap id="user" type="com.gelin.activitispringboot.model.User"/>
    <resultMap id="user" type="com.gelin.activitispringboot.model.User"/>

    <parameterMap id="record" type="com.gelin.activitispringboot.model.AuditRecords"/>
    <resultMap id="record" type="com.gelin.activitispringboot.model.AuditRecords"/>

    <parameterMap id="firstPlan" type="com.gelin.activitispringboot.model.FirstPlan"/>
    <resultMap id="firstPlan" type="com.gelin.activitispringboot.model.FirstPlan"/>

    <parameterMap id="firstRecord" type="com.gelin.activitispringboot.model.FirstRecords"/>
    <resultMap id="firstRecord" type="com.gelin.activitispringboot.model.FirstRecords"/>

    <insert id="insertAuditProcess" parameterMap="audit" useGeneratedKeys="true" keyProperty="id">
       insert into auditprocess (
         name,
         leaveDay,
         cause,
         remarks,
         leaveTime,
         status,
         createTime,
         createUserId,
         processInstanceId
       )
       values (
         #{name},
         #{leaveDay},
         #{cause},
         #{remarks},
         #{leaveTime},
         #{status},
         #{createTime},
         #{createUserId},
         #{processInstanceId}
       )
    </insert>

    <update id="updateAuditProcess" parameterMap="audit">
        update auditprocess
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="leaveDay != null">
                leaveDay = #{leaveDay},
            </if>
            <if test="cause != null">
                cause = #{cause},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
            <if test="leaveTime != null">
                leaveTime = #{leaveTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId},
            </if>
            <if test="processInstanceId != null">
                processInstanceId = #{processInstanceId},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findOneAuditProcessById" resultMap="audit">
        select * from auditprocess where id = #{id}
    </select>

    <select id="findOneAuditProcessByProcessInstanceId" resultMap="audit">
        select * from auditprocess where processInstanceId = #{id}
    </select>

    <select id="findAll" resultMap="audit">
       select * from auditprocess
    </select>

    <select id="findAllByCreateUserId" resultMap="audit">
        select * from auditprocess where createUserId = #{userId}
    </select>


    <select id="findOneByLogin" resultMap="user">
        select * from user where username = #{username} and password = #{password}
    </select>

    <select id="findOneById" resultMap="user">
        select * from user where id = #{id}
    </select>

    <select id="findAllUserByRoleName" resultMap="user">
        select t3.* from role t1
        left join userrolerelation t2 on t1.id = t2.roleId
        left join user t3 on t2.userId = t3.id
        where t1.name = #{name}
    </select>

    <!--===========================审核记录============================-->

    <insert id="insertAuditRecords" parameterMap="record" useGeneratedKeys="true" keyProperty="id">
       insert into auditrecords (
         auditProcessId,
         remarks,
         examineUserId,
         examineStatus,
         examineTime
       ) values (
         #{auditProcessId},
         #{remarks},
         #{examineUserId},
         #{examineStatus},
         #{examineTime}
       )
    </insert>

    <select id="findAllRecordByAuditId" resultMap="record">
        select t1.*,t2.name as examineName from auditrecords t1
        left join user t2 on t1.examineUserId = t2.id
        where t1.auditProcessId = #{id}
    </select>





    <!--==================================首检================================-->


    <insert id="insertFirstPlan" parameterMap="firstPlan" useGeneratedKeys="true" keyProperty="id">
        insert into firstplan (
           processInstanceId,
           siteName,
           chanceName,
           detailedDescription,
           arrange,
           createUserId,
           createDateTime,
           status
        ) values (
           #{processInstanceId},
           #{siteName},
           #{chanceName},
           #{detailedDescription},
           #{arrange},
           #{createUserId},
           #{createDateTime},
           #{status}
        )
    </insert>

    <select id="findOneFirstPlanById" resultMap="firstPlan">
        select * from firstplan where id = #{id}
    </select>

    <select id="findFirstPlanByProcessInstanceId" resultMap="firstPlan">
        select * from firstplan where processInstanceId = #{pid}
    </select>

    <insert id="insertFirstRecords" parameterMap="firstRecord" useGeneratedKeys="true" keyProperty="id">
        insert into firstrecords (
           firstPlanId,
           taskId,
           remarks,
           examStatus,
           operationUserId,
           operationDate
        ) values (
           #{firstPlanId},
           #{taskId},
           #{remarks},
           #{examStatus},
           #{operationUserId},
           #{operationDate}
        )
    </insert>

    <update id="updateFirstPlan" parameterMap="firstPlan">
        update firstplan
        <set>
            <if test="processInstanceId != null">
                processInstanceId = #{processInstanceId},
            </if>
            <if test="siteName != null">
                siteName = #{siteName},
            </if>
            <if test="chanceName != null">
                chanceName = #{chanceName},
            </if>
            <if test="detailedDescription != null">
                detailedDescription = #{detailedDescription},
            </if>
            <if test="arrange != null">
                arrange = #{arrange},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId},
            </if>
            <if test="createDateTime != null">
                createDateTime = #{createDateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findFirstRecordList" resultMap="firstRecord">
        select * from firstrecords where firstPlanId = #{firstPlanId}
    </select>

    <select id="findFirstPlanByCreateUserId" resultMap="firstPlan">
        select * from firstplan where createUserId = #{id}
    </select>


    <insert id="insertProFile" useGeneratedKeys="true" keyProperty="id">
        insert into flowpngfile (
           processInstanceId,
           fileUrl
        )values (
           #{processInstanceId},
           #{fileUrl}
        )
    </insert>

    <select id="findOneProFlowPng" resultType="com.gelin.activitispringboot.model.ProFlowPng">
        select * from flowpngfile where processInstanceId = #{processInstanceId}
    </select>

</mapper>